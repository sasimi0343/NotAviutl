@[Group] GroupControl
--track0:Layer,1,99,5,1
--check0:Opposite

local gzoom = obj.zoom * (obj.getvalue("zoom")/100)
local grz = obj.rz + obj.getvalue("rz")
local min_x,max_x,min_y,max_y = 0,0,0,0
for i=1,obj.track0 do

local layer = obj.layer + i
if (obj.check0) then
	layer = obj.layer - (obj.track0-i+1)
end
obj.load("layer", layer, true)
if (not (obj.getvalue("layer" .. layer .. ".x") == nil)) then
	local layerr = "layer" .. layer .. "."
	local x = obj.ox + obj.cx + obj.getvalue(layerr .. "x")
	local y = obj.oy + obj.cy + obj.getvalue(layerr .. "y")
	local z = obj.oz + obj.cz + obj.getvalue(layerr .. "z")
	local rx = obj.rx + obj.getvalue(layerr .. "rx")
	local ry = obj.ry + obj.getvalue(layerr .. "ry")
	local rz = obj.rz + obj.getvalue(layerr .. "rz") - (grz/2)
	local zoom = obj.zoom * (obj.getvalue(layerr .. "zoom")/100) --/ gzoom
	local alpha = obj.alpha * obj.getvalue(layerr .. "alpha")
	local aspect = obj.aspect * obj.getvalue(layerr .. "aspect")
	
	local z_x = 100
	local z_y = 100
	if (aspect > 0) then
		z_x = (1-aspect)*100
		obj.effect("リサイズ", "X", z_x, "Y", z_y)
	else
		z_y = (1+aspect)*100
		obj.effect("リサイズ", "X", z_x, "Y", z_y)
	end
	
	local maxx = x + (obj.w/2 / gzoom)
	local minx = x - (obj.w/2 / gzoom)
	local maxy = y + (obj.h/2 / gzoom)
	local miny = y - (obj.h/2 / gzoom)
	
	if (maxx > max_x) then max_x = maxx end
	if (minx < min_x) then min_x = minx end
	if (maxy > max_y) then max_y = maxy end
	if (miny < min_y) then min_y= miny end
	
	--obj.draw(x,y,z,zoom,alpha,rx,ry,rz)
end

end

local w = math.max(max_x, -min_x) * 2
local h = math.max(max_y, -min_y) * 2

obj.setoption("drawtarget","tempbuffer", w, h)
for i=1,obj.track0 do

local layer = obj.layer + i
if (obj.check0) then
	layer = obj.layer - (obj.track0-i+1)
end
obj.load("layer", layer, true)
if (not (obj.getvalue("layer" .. layer .. ".x") == nil)) then
	local layerr = "layer" .. layer .. "."
	local x = obj.ox + obj.cx + obj.getvalue(layerr .. "x")
	local y = obj.oy + obj.cy + obj.getvalue(layerr .. "y")
	local z = obj.oz + obj.cz + obj.getvalue(layerr .. "z")
	local rx = obj.rx + obj.getvalue(layerr .. "rx")
	local ry = obj.ry + obj.getvalue(layerr .. "ry")
	local rz = obj.rz + obj.getvalue(layerr .. "rz") - (grz/2)
	local zoom = obj.zoom * (obj.getvalue(layerr .. "zoom")/100) --/ gzoom
	local alpha = obj.alpha * obj.getvalue(layerr .. "alpha")
	local aspect = obj.aspect * obj.getvalue(layerr .. "aspect")
	
	local z_x = 100
	local z_y = 100
	if (aspect > 0) then
		z_x = (1-aspect)*100
		obj.effect("リサイズ", "X", z_x, "Y", z_y)
	else
		z_y = (1+aspect)*100
		obj.effect("リサイズ", "X", z_x, "Y", z_y)
	end
	
	obj.draw(x,y,z,zoom,alpha,rx,ry,rz)
end

end

obj.setoption("drawtarget","framebuffer")
obj.load("tempbuffer")

--obj.zoom = 1 / gzoom

--print(obj.w .. ", " .. obj.h)


@[Group] EachObject
--track0:Layer,1,99,5,1
--check0:Opposite

local layer = obj.layer + obj.track0
if (obj.check0) then
	layer = obj.layer - obj.track0
end

--obj.setoption("draw_state", false)
obj.load("layer", layer, true)
--obj.setoption("draw_state", false)

print(tostring(obj.w) .. " x " .. tostring(obj.h))